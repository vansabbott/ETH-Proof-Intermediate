// SPDX-License-Identifier: MIT
pragma solidity ^0.8.13;
contract bal{
    event bank(address indexed from, address indexed id, uint value);

    mapping(address => uint) public balances;

    function Deposit(address id,uint value) public payable{
        balances[id]+=value;
        emit bank(msg.sender,id,value);
    }

    function Withdraw(address id, uint value) public payable{
        require(value<=balances[id],"Insufficient Balance");  //Require statement
        if(balances[id]<value){                               //Revert statement
             revert("Error");
        }
        assert(balances[id] >= value);                        //Assert statement
        balances[id]-=value;
        emit bank(msg.sender,id,value);      
    }
}
